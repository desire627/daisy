// Responsive breakpoints mixin
@mixin add_variables( $view: frontend ) {
	@if frontend == $view {
		:root {
			@content;
		}
	}
	@if editor == $view {
		:root,
		body {
			@content;
		}
	}
}

@mixin transition($transition...) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}
@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}

// Button style
// - Applies button styles to blocks and elements that share them.
@mixin tz-basic-wp-button-style() {
	border: none;
	cursor: pointer;
	font-weight: $tz-basic-button-font-weight;
	font-size: $tz-basic-button-font-size;
	line-height: $tz-basic-button-line-height;
	padding:$tz-basic-button-padding;
	text-decoration: none;
	text-transform: $tz-basic-button-transform;
	@include transition($tz-basic-transition);
	font-family:$tz-basic-button-font-family;
	height:auto;

	// Standard Button Color Relationship Logic
	&:not(:hover):not(:active) {
		// Text colors
		&:not(.has-text-color) {
			color: $tz-basic-button-color;

			// Nested
			.has-background & {
				color: $tz-basic-button-color;

				&.has-background {
					color: $tz-basic-button-color;
				}
			}
		}

		// Background-colors
		&:not(.has-background) {
			background-color: $tz-basic-button-bg;

			// Nested
			.has-background & {
				background-color: $tz-basic-button-bg;
			}
		}
	}

	// Hover Button color should match parent element foreground color
	&:hover,
	&:active {
		background-color: $tz-basic-button-bg-hover;
		border-color: transparent;
		color: $tz-basic-button-color-hover;
		@include transition($tz-basic-transition);
	}

	// Disabled Button colors
	&:disabled {
		background-color: $tz-basic-button-disable-bg;
		border-color: $tz-basic-button-disable-border-color;
		color: $tz-basic-button-disable-color;
	}
}
@mixin tz-basic-button-style() {
	border:none;
	border-radius: $tz-basic-button-radius;
	cursor: pointer;
	font-weight: $tz-basic-button-font-weight;
	font-size: $tz-basic-button-font-size;
	line-height: $tz-basic-button-line-height;
	padding:$tz-basic-button-padding;
	text-decoration: none;
	text-transform: $tz-basic-button-transform;
	@include transition($tz-basic-transition);

	// Standard Button Color Relationship Logic
	&:not(:hover):not(:active) {
		// Text colors
		&:not(.has-text-color) {
			color: $tz-basic-button-color;

			// Nested
			.has-background & {
				color: $tz-basic-button-color;

				&.has-background {
					color: $tz-basic-button-color;
				}
			}
		}

		// Background-colors
		&:not(.has-background) {
			background-color: $tz-basic-button-bg;

			// Nested
			.has-background & {
				background-color: $tz-basic-button-bg;
			}
		}
	}

	// Hover Button color should match parent element foreground color
	&:hover,
	&:active {
		background-color: $tz-basic-button-bg-hover;
		border-color: transparent;
		color: $tz-basic-button-color-hover;
		@include transition($tz-basic-transition);
	}

	// Disabled Button colors
	&:disabled {
		background-color: $tz-basic-button-disable-bg;
		border-color: $tz-basic-button-disable-border-color;
		color: $tz-basic-button-disable-color;
	}
}
@mixin tz-shop-button-style() {
	border-radius: $tz-basic-button-radius;
	cursor: pointer;
	font-weight: $tz-basic-button-font-weight;
	font-size: $tz-basic-shop-button-size;
	line-height: $tz-basic-button-line-height;
	padding:$tz-basic-button-padding;
	text-decoration: none;
	text-transform: $tz-basic-button-transform;
	@include transition($tz-basic-transition);
	background-color: $tz-basic-shop-button-bg;
	color:$tz-basic-shop-button-color;
	&:hover,
	&:active {
		background-color: $tz-basic-shop-button-bg-hover;
		color: $tz-basic-shop-button-color-hover;
		@include transition($tz-basic-transition);
	}
}

@mixin innerblock-margin-clear($container) {

	// Clear the top margin for the first-child.
	> #{$container} > *:first-child {
		margin-top: 0;
	}

	// Last child that is not the appender.
	> #{$container} > *:last-child:not(.block-list-appender) {
		margin-bottom: 0;
	}

	// When selected, the last item becomes the second last because of the appender.
	&.has-child-selected > #{$container} > *:nth-last-child(2),
	&.is-selected > #{$container} > *:nth-last-child(2) {
		margin-bottom: 0;
	}
}
@mixin tz-pagination-style() {
	display: inline-flex;
	padding: 7px 15px;
	min-width: 44px;
	min-height: 44px;
	color: $tz-basic-paginate;
	justify-content: center;
	align-items: center;
	margin: 0 5px;
	transition: all 0.3s linear;
	border:1px solid $tz-basic-border-color;
	@include border-radius($tz-basic-small-button-radius);
	background:$tz-basic-paginate-bg;
	&:hover,&.current{
		background:$tz-basic-paginate-bg-current;
		color:$tz-basic-paginate-current;
		border-color:$tz-basic-paginate-bg-current;
	}
	&.next,&.prev{
		padding:7px 10px;
	}
}
@mixin tz-sidebar-heading-1() {
	margin-bottom: $tz-basic-sidebar-heading-margin-bottom;
	padding-bottom:$tz-basic-sidebar-heading-padding-bottom;
	border-bottom: 1px solid $tz-basic_border-color2;
	position:relative;
	&:after{
		content:"";
		width:60px;
		position:absolute;
		height:1px;
		bottom:-1px;
		left:0;
		background:$tz-basic-theme-color;
	}
}
@mixin tz-sidebar-heading-2() {
	margin-bottom: $tz-basic-sidebar-heading2-margin-bottom;
	padding-bottom:$tz-basic-sidebar-heading2-padding-bottom;
	border-bottom: 1px solid $tz-basic_border-color2;
	position:relative;
	&:after{
		content:"";
		width:100%;
		position:absolute;
		height:1px;
		bottom:-1px;
		left:0;
		background:$tz-basic_border-color2;
		opacity:1;
	}
}
@mixin tz-sidebar-heading-3() {
	margin-bottom: $tz-basic-sidebar-heading3-margin-bottom;
	padding-bottom:$tz-basic-sidebar-heading3-padding-bottom;
	position:relative;
	border:none;
	&:before{
		content:"";
		width:$tz-basic-sidebar-heading3-before-width;
		position:absolute;
		height:2px;
		bottom:-1px;
		left:0;
		background:$tz-basic-theme-color;
		opacity:1;
	}
	&:after{
		content:"";
		width:$tz-basic-sidebar-heading3-after-width;
		position:absolute;
		height:2px;
		bottom:-1px;
		left:calc(5px + #{$tz-basic-sidebar-heading3-before-width});
		background:$tz-basic-theme-color;
		opacity:1;
	}
}
@mixin tz-nav-slider() {
	width:$tz-basic-input-large-height;
	height:$tz-basic-input-large-height;
	background:transparent;
	color:$tz-basic-body-color;
	display:flex;
	border:1px solid $tz-basic-border-color;
	justify-content: center;
	align-items: center;
	padding:0;
	@include transition($tz-basic-transition);
	@include border-radius(50%);
	&:hover,&:active{
		background:$tz-basic-button-bg-hover;
		color:$tz-basic-button-color-hover;
		border-color:$tz-basic-button-bg-hover;
		@include transition($tz-basic-transition);
		polyline{
			stroke:$tz-basic-button-color-hover;
		}
	}
	svg{
		height: 18px;
	}
}
@mixin tz-related() {
	margin-top:100px !important;
	padding-top:90px;
	border-top:1px solid $tz-basic_border-color2;
	position: relative;
	.box-title{
		text-align:left;
		font-size:$tztheme-shop-detail-related-size;
		text-transform: $tz-basic-box-title-transform;
		position:relative;
	}
}
@mixin tz-flash-effect(){
	&:before {
		position: absolute;
		top: 0;
		left: -100%;
		display: block !important;
		content: '';
		width: 50%;
		height: 100%;
		background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.3) 100%);
		transform: skewX(-25deg);
		z-index: 2;
	}
	&:hover {
		&:before {
			-webkit-animation: slide 1.3s;
			animation: slide 1.3s;
		}
	}
}
@keyframes slide {
	0% {left:-100%;}
	100% {left:125%;}
}

@mixin tz-ripple-effect(){
	position:relative;
	overflow: hidden;
	@include transition($tz-basic-transition);
	&:hover{
		&:before,&:after{
			animation: tz_growAndFade 5s infinite ease-out;
			opacity: 0;
		}
		&:before{
			animation-delay: 0.1s;
		}
		&:after{
			animation-delay: 1s;
		}
		transform:scale(1.05);
		@include transition($tz-basic-transition);
	}
	&:before,&:after {
		position: absolute;
		top: 50%;
		left: 50%;
		content: '';
		width: 150px;
		height: 150px;
		margin-top: -75px;
		margin-left:-75px;
		border-radius:50%;
		background-color: #fff;
		opacity: 0;
	}

}
@mixin tz-menu-ripple-effect(){
	position:relative;
	&:before,&:after {
		position: absolute;
		top: 50%;
		left: 50%;
		content: '';
		width: 20px;
		height: 20px;
		margin-top: -30px;
		margin-left:-10px;
		border-radius:50%;
		background-color: $tz-basic-theme-color;
		opacity: 0;
		animation: tz_heading_growAndFade 3s infinite ease-out;
	}
	&:before{
		animation-delay: 0.1s;
	}
	&:after{
		animation-delay: 1s;
	}

}
@keyframes tz_menu_growAndFade {
	0% {
		opacity: 0.5;
		transform: scale(0);
	}
	100% {
		opacity: 0;
		transform: scale(1);
	}
}
@mixin tz-heading-ripple-effect(){
	position:relative;
	&:before,&:after {
		position: absolute;
		top: 50%;
		left: 0;
		content: '';
		width: 20px;
		height: 20px;
		margin-top: -10px;
		border-radius:50%;
		background-color: $tz-basic-theme-color;
		opacity: 0;
		animation: tz_heading_growAndFade 3s infinite ease-out;
	}
	&:before{
		animation-delay: 0.1s;
	}
	&:after{
		animation-delay: 1s;
	}

}

@keyframes tz_heading_growAndFade {
	0% {
		opacity: 0.5;
		transform: scale(0);
	}
	100% {
		opacity: 0;
		transform: scale(1);
	}
}
@keyframes tz_menu_growAndFade {
	0% {
		opacity: 0.15;
		transform: scale(0.3);
	}
	100% {
		opacity: 0;
		transform: scale(1);
	}
}
@keyframes tz_growAndFade {
	0% {
		opacity: 0.15;
		transform: scale(0);
	}
	100% {
		opacity: 0;
		transform: scale(1);
	}
}